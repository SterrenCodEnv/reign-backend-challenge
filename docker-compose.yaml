version: '3.7'

services:
  app:
    image: reing_challenge:v1
    container_name: reing_challenge
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    env_file: .env.example
    ports: 
        - 3000:3000
    depends_on:
      - rabbitmq
    networks:
      - ms_nestjs

  microservices-schedule:
    image: microservices-schedule:v1
    container_name: microservices-schedule
    build:
      context: ./microservices-schedule
      dockerfile: Dockerfile
    env_file: .env.example
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - ms_nestjs

  microservices-news:
    image: microservices-news:v1
    container_name: microservices-news
    build:
      context: ./microservices-news
      dockerfile: Dockerfile
    env_file: .env.example
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - ms_nestjs

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    expose:
      - 5672
      - 15672
    restart: always
    networks:
      - ms_nestjs

  postgres:
    image: postgres:13
    restart: always
    container_name: reign-db
    environment:
      - POSTGRES_DB=reign_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test123
    ports:
      - '5432:5432'
    volumes:
      - reign-data:/var/lib/postgresql/data
    networks:
      - ms_nestjs

volumes:
  reign-data:

networks:
  ms_nestjs: